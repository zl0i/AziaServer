image: docker:19.03.12

services:
  - docker:19.03.12-dind

stages:
  - build
  - test
  - deploy

build:
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_REF_SLUG}.$CI_PIPELINE_ID ./server/
    - docker push ${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_REF_SLUG}.$CI_PIPELINE_ID
    - docker build -t ${CI_REGISTRY_IMAGE}/app:latest ./server/
    - docker push ${CI_REGISTRY_IMAGE}/app:latest

    - docker build -t ${CI_REGISTRY_IMAGE}/proxy:${CI_COMMIT_REF_SLUG}.$CI_PIPELINE_ID ./proxy/
    - docker push ${CI_REGISTRY_IMAGE}/proxy:${CI_COMMIT_REF_SLUG}.$CI_PIPELINE_ID
    - docker build -t ${CI_REGISTRY_IMAGE}/proxy:latest ./proxy/
    - docker push ${CI_REGISTRY_IMAGE}/proxy:latest

    - docker build -t ${CI_REGISTRY_IMAGE}/prometheus:${CI_COMMIT_REF_SLUG}.$CI_PIPELINE_ID ./monitoring/prometheus/
    - docker push ${CI_REGISTRY_IMAGE}/prometheus:${CI_COMMIT_REF_SLUG}.$CI_PIPELINE_ID
    - docker build -t ${CI_REGISTRY_IMAGE}/prometheus:latest ./monitoring/prometheus/
    - docker push ${CI_REGISTRY_IMAGE}/prometheus:latest

test:
  stage: test
  before_script:
    - apk add --no-cache docker-compose
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker-compose -f docker-compose.test.yml up --abort-on-container-exit --exit-code-from app

deploy:
  stage: deploy
  variables:
    DOCKER_HOST: tcp://zloi.space:2376
    DOCKER_TLS_VERIFY: 1
    APP_SMS_API_KEY: ${APP_SMS_API_KEY}
    APP_MONGODB_HOST: ${APP_MONGODB_HOST}
    APP_MONGODB_USER: ${APP_MONGODB_USER}
    APP_MONGODB_PASSWORD: ${APP_MONGODB_PASSWORD}
    APP_MONGODB_DB: ${APP_MONGODB_DB}
  before_script:
    - apk add --no-cache docker-compose
    - mkdir /root/.docker/
    - echo ${DOCKER_CA} > /root/.docker/ca.pem
    - echo ${DOCKER_CERT} > /root/.docker/cert.pem
    - echo ${DOCKER_KEY} > /root/.docker/key.pem   
  script:    
    - docker --tlsverify  -H=zloi.space:2376 --tlscacert=/root/.docker/ca.pem --tlscert=/root/.docker/client-client1-cert.pem --tlskey=/root/.docker/client-client1-key.pem ps
    - docker ps 
    - docker-compose -f docker-compose.prod.yml pull
    - docker-compose -f docker-compose.prod.yml stop
    - docker-compose -f docker-compose.prod.yml up -d
#  only:
#    - master
