image: docker:19.03.12

services:
  - docker:19.03.12-dind

after_script:
  - docker logout

build_app:
  stage: build
  before_script:    
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_REF_SLUG}.$CI_PIPELINE_ID ./server/
    - docker push ${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_REF_SLUG}.$CI_PIPELINE_ID
    - docker build -t ${CI_REGISTRY_IMAGE}/app:latest ./server/
    - docker push ${CI_REGISTRY_IMAGE}/app:latest  

build_proxy:
  stage: build
  before_script:
    - mkdir -p ./proxy/ssl/zloi.space/
    - echo "$SSL_FULLCHAIN" > ./proxy/ssl/zloi.space/fullchain.pem
    - echo "$SSL_PRIVKEY" > ./proxy/ssl/zloi.space/privkey.pem
    - echo "$SSL_DHPARAMS" > ./proxy/ssl/ssl-dhparams.pem
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:    
    - docker build -t ${CI_REGISTRY_IMAGE}/proxy:${CI_COMMIT_REF_SLUG}.$CI_PIPELINE_ID ./proxy/
    - docker push ${CI_REGISTRY_IMAGE}/proxy:${CI_COMMIT_REF_SLUG}.$CI_PIPELINE_ID
    - docker build -t ${CI_REGISTRY_IMAGE}/proxy:latest ./proxy/
    - docker push ${CI_REGISTRY_IMAGE}/proxy:latest
  
build_prometheus:
  stage: build
  before_script:    
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:    
    - docker build -t ${CI_REGISTRY_IMAGE}/prometheus:${CI_COMMIT_REF_SLUG}.$CI_PIPELINE_ID ./monitoring/prometheus/
    - docker push ${CI_REGISTRY_IMAGE}/prometheus:${CI_COMMIT_REF_SLUG}.$CI_PIPELINE_ID
    - docker build -t ${CI_REGISTRY_IMAGE}/prometheus:latest ./monitoring/prometheus/
    - docker push ${CI_REGISTRY_IMAGE}/prometheus:latest  

test:
  stage: test
  before_script:
    - apk add --no-cache docker-compose
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker-compose -f docker-compose.test.yml up --abort-on-container-exit --exit-code-from app
  needs:
    - build_app  

deploy:
  stage: deploy
  variables:
    DOCKER_HOST: tcp://zloi.space:2376
    DOCKER_TLS_VERIFY: 1   
  before_script:
    - apk add --no-cache docker-compose
    - mkdir /root/.docker/
    - echo "$DOCKER_CA" > /root/.docker/ca.pem
    - echo "$DOCKER_CERT" > /root/.docker/cert.pem
    - echo "$DOCKER_KEY" > /root/.docker/key.pem
    - echo "$PROD_ENV" > .env  
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY 
  script:        
    - docker-compose -f docker-compose.prod.yml pull
    - docker-compose -f docker-compose.prod.yml down
    - docker-compose -f docker-compose.prod.yml --env-file ./.env up -d
    - docker system prune -f
  only:
    - master
  needs:
    - test   
    - build_proxy
    - build_prometheus
