version: "3.3"

services:
  db:
    image: mongo:4.4.4-bionic
    container_name: db 
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${APP_MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${APP_MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE:  ${APP_MONGODB_DB}
    volumes:
      - db:/data/db:rw
    restart: always
    networks:
     - backend
    ports: 
      - 27017:27017

  app:
    image: registry.gitlab.com/zl0i/restaurantserver/app:latest
    env_file: ./.env
    expose:
      - 3000
    networks: 
      - backend
    restart: always    

  nginx:
    image: registry.gitlab.com/zl0i/restaurantserver/proxy:latest
    container_name: proxy   
    restart: always
    networks:
      - backend
    ports:
      - 80:80
      - 443:443  
      
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.38.6
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro 
      - /dev/disk/:/dev/disk:ro 
    privileged: true
    restart: unless-stopped
    expose:
      - 8080  
    devices:
      - "/dev/kmsg"
    networks:
      - backend

  nodeexporter:
    image: prom/node-exporter:v1.0.1
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - backend

  nginxexporter:
    image: nginx/nginx-prometheus-exporter:0.8.0
    container_name: nginxexporter
    command:
      -nginx.scrape-uri http://proxy:80/nginx_status 
      -nginx.retries=10 
      -web.telemetry-path=/metrics
    restart: unless-stopped
    expose:
      - 9113
    networks:      
      - backend

  prometheus:
    image: registry.gitlab.com/zl0i/restaurantserver/prometheus:latest
    container_name: prometheus
    user: root
    volumes:
      - ./monitoring/prometheus/data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention=200h"
      - "--web.enable-lifecycle"
    restart: unless-stopped
    expose: 
      - 9090
    networks:      
      - backend  

  grafana:
    image: grafana/grafana:7.3.7
    container_name: grafana
    user: root
    volumes:
      - ./monitoring/grafana/:/var/lib/grafana
      - ./monitoring/grafana/datasources:/etc/grafana/datasources
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SERVER_DOMAIN=zloi.space
      - GF_SERVER_ROOT_URL=https://zloi.space/restaurant/server/grafana
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - backend 

volumes: 
  db: {}

networks: 
  backend:    
    driver: bridge